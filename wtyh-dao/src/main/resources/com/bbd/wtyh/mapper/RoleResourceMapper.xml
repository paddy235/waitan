<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.wtyh.mapper.RoleResourceMapper">

    <select id="queryResourceCodeByLoginName" parameterType="java.lang.String" resultType="java.lang.String">
        select resource.`code` from user_mgment,user_role,role_resource,resource
        where user_mgment.id=user_role.user_id and user_role.role_id=role_resource.role_id
        and role_resource.resource_id=resource.id
        and user_mgment.login_name=#{loginName}
    </select>

    <select id="queryResourceCodeByUserId" parameterType="int" resultType="java.lang.String">
        select resource.`code` from user_mgment,user_role,role_resource,resource
        where user_mgment.id=user_role.user_id and user_role.role_id=role_resource.role_id
        and role_resource.resource_id=resource.id
        and user_mgment.id=#{userId}
    </select>

    <select id="getResourceByCode" parameterType="java.lang.String" resultType="com.bbd.wtyh.domain.ResourceDo">
        select `id`, `code`, `name`, `parent_code` AS parentCode, `type`, `url`,
        `display_order` as displayOrder,
        `create_date` as createDate,
        `create_by` as createBy,
        `update_date` as updateDate,
        `update_by` as updateBy
        from resource where `code` = #{resourceCode}
    </select>

    <insert id="addRoleBase" parameterType="com.bbd.wtyh.domain.RoleDo" useGeneratedKeys="true" keyProperty="id"
            keyColumn="id">
        INSERT INTO `role` (`name`, `description`, `type`, `create_date`, `update_date`, `create_by`, `update_by`)
        VALUES (#{name}, #{description}, #{type}, #{createDate}, #{updateDate}, #{createBy}, #{updateBy});
    </insert>

    <insert id="updateRoleBase" parameterType="com.bbd.wtyh.domain.RoleDo"  >
       update `role`
       set `name`=#{name},
           `description`=#{description},
           `update_by`=#{updateBy},
           `update_date`=#{updateDate}
       where `id`=#{id}
    </insert>

    <insert id="addRoleResourceRelation" parameterType="com.bbd.wtyh.domain.RoleResourceDo" useGeneratedKeys="true"
            keyProperty="id"
            keyColumn="id">
        INSERT INTO `role_resource` (`role_id`, `resource_id`, `create_date`, `update_date`, `create_by`, `update_by`)
        VALUES (#{roleId}, #{resourceId}, #{createDate}, #{updateDate}, #{createBy}, #{updateBy});
    </insert>
    <insert id="addUserRoleRelation" parameterType="com.bbd.wtyh.domain.UserRoleDo" useGeneratedKeys="true"
            keyProperty="id"
            keyColumn="id">
        INSERT INTO `user_role` (`user_id`, `role_id`, `create_date`, `update_date`, `create_by`, `update_by`)
        VALUES (#{userId}, #{roleId}, #{createDate}, #{updateDate}, #{createBy}, #{updateBy});
    </insert>

    <select id="getRoleAreaRelationByRoleIdAndAreaId" parameterType="int" resultType="int">
        select count(1)as counts from role_area where
        role_id=#{roleId} and area_id=#{areaId}
    </select>

    <select id="getUserRoleByUser" parameterType="int" resultType="com.bbd.wtyh.domain.UserRoleDo">
        select user_role.id,
        user_role.user_id AS userId,
        user_role.role_id AS roleId from user_role,user_mgment
        where
        user_role.user_id=user_mgment.id
        and user_mgment.id=#{userId}
    </select>
    <delete id="deleteRoleResourceRelation" parameterType="int">
        delete from role_resource where role_id=#{roleId}
    </delete>

    <delete id="deleteRoleBase" parameterType="int">
        delete from role where id=#{roleId}
    </delete>

    <delete id="deleteUserRoleRelation" parameterType="int">
        delete from user_role where user_id=#{userId}
    </delete>
    <select id="getUserRoleRelation" parameterType="int" resultType="com.bbd.wtyh.domain.UserRoleDo">
        select id,user_id as userId,role_id as roleId from user_role where user_id=#{userId} and role_id=#{roleId}
    </select>


    <select id="listRoleBase" parameterType="java.util.HashMap" resultType="com.bbd.wtyh.domain.RoleDo">
        select id,name,description,type,
        create_date AS createDate ,
        update_date AS updateDate ,
        create_by AS createBy ,
        update_by AS updateBy ,
        user_type AS userType
        from role
        where
        type not in('S','D')
        <if test="roleType != null">and type = #{roleType}</if>
        order by update_date desc
        <if test="listing !=null ">
            LIMIT
            <if test="pageNumber !=null">
                #{pageNumber},
            </if>
            #{pageLimit}
        </if>
    </select>

    <select id="listSonRoleBase" parameterType="int" resultType="com.bbd.wtyh.domain.RoleDo">
        select id,name,description,type,
        create_date AS createDate ,
        update_date AS updateDate ,
        create_by AS createBy ,
        update_by AS updateBy ,
        user_type AS userType
        from role
        where
        1=1
        <if test="userType != null">and user_type = #{userType}</if>
        order by name
    </select>

    <select id="getRoleBaseByIdNameType" parameterType="java.util.HashMap" resultType="com.bbd.wtyh.domain.RoleDo">
        select id,name,description,type,
        create_date AS createDate ,
        update_date AS updateDate ,
        create_by AS createBy ,
        update_by AS updateBy ,
        user_type AS userType
        from role
        where
        1=1
        <if test="roleId != null">and id = #{roleId}</if>
        <if test="roleName != null">and name = #{roleName}</if>
        <if test="roleType != null">and type = #{roleType}</if>

    </select>

    <select id="listResourceByRoleId" parameterType="int" resultType="com.bbd.wtyh.domain.ResourceDo">
        select resource.`id`, resource.`code`, resource.`name`, resource.`parent_code` AS parentCode,
        resource.`type`, resource.`url`,
        resource.`display_order` as displayOrder,
        resource.`create_date` as createDate,
        resource.`create_by` as createBy,
        resource.`update_date` as updateDate,
        resource.`update_by` as updateBy
        from role_resource,resource
        where role_resource.role_id=#{roleId}
        and role_resource.resource_id=resource.id
        order by resource.display_order
    </select>


    <resultMap id="roleResource" type="com.bbd.wtyh.domain.RoleDo">
        <id property="id" column="id"/>
        <result property="userType" column="user_type"/>
        <collection property="resources" javaType="java.util.ArrayList" select="selectParentResourceByRole" column="id"/>
    </resultMap>

    <resultMap id="allResource" type="com.bbd.wtyh.domain.ResourceDo">
        <id property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="parentCode" column="parent_code"/>
        <collection property="childResource" javaType="java.util.ArrayList" ofType="com.bbd.wtyh.domain.ResourceDo"
                    column="code" select="selectChildResource"/>
    </resultMap>

    <select id="getAllResource" resultMap="allResource">
        SELECT
            re.id,re.code,re.name,re.type,re.parent_code
        FROM resource re
        WHERE
            re.parent_code IS NULL
            <if test="type != null and type != ''">
                AND re.type = #{type}
            </if>
    </select>

    <select id="getRoleResource" resultMap="roleResource">
        SELECT
            r.id,
            r.name,
            r.type,
            r.user_type AS userType
        FROM
            role r
        WHERE r.user_type = #{userType}
        <if test="roleType != null and roleType != ''">
            AND r.type = #{roleType}
        </if>

    </select>

    <select id="selectChildResource" resultMap="allResource">
        SELECT
            re.id,
            re.code,
            re.name,
            re.type,
            re.parent_code AS parentCode
        FROM
            resource re
        WHERE
            re.parent_code = #{code}
    </select>

    <select id="selectParentResourceByRole" resultMap="allResource" parameterType="int">
        SELECT
            re.*
        FROM
            resource re
        LEFT JOIN role_resource rr ON re.id = rr.resource_id AND re.parent_code IS NULL
        WHERE
            rr.role_id = #{roleId}
    </select>
    <select id="listRoleAssign" parameterType="java.util.HashMap" resultType="com.bbd.wtyh.domain.dto.UserRoleDTO">
        select  a.id,
                a.login_name as loginName,
                a.real_name as realName,
                b.user_id as userId
        from (select id,login_name,real_name from user_mgment where user_type=#{userType})a
        LEFT JOIN (select user_id from user_role where role_id=#{roleId})b
        on a.id=b.user_id order by b.user_id
    </select>
</mapper>
