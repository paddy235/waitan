<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.wtyh.mapper.ParkAndBuildingMgtMapper">

    <select id="queryParkAndBuilding" parameterType="java.lang.String" resultType="com.bbd.wtyh.domain.vo.ParkAndBuildingVO">
        SELECT
          p.`name` as parkName,
          p.`park_id` as parkId,
          b.`name` as buildingName,
          b.`building_id` as buildingId,
          DATE_FORMAT(p.create_date,'%Y.%c.%d') as createDate
        FROM
          park p, building b
        <where>
            p.park_id=b.park_id
            <if test="parkId != null and parkId != ''">
                and p.park_id=#{parkId}
            </if>
            <if test="buildingName != null and buildingName != ''">
                and b.name=#{buildingName}
            </if>
        </where>
    </select>

    <select id="queryParkById" parameterType="java.lang.String" resultType="com.bbd.wtyh.domain.ParkDO">
        SELECT
            park_id as parkId,
            `name` as `name`,
            area_id as areaId,
            img_url as imgUrl
        FROM
            park
        WHERE park_id=#{parkId}
    </select>

    <update id="updateParkImgUrl" parameterType="com.bbd.wtyh.domain.ParkDO">
        UPDATE park SET img_url=#{imgUrl}, update_date=SYSDATE(),update_by=#{updateBy} WHERE park_id=#{parkId}
    </update>

    <update id="updateBuildingImgUrl" parameterType="com.bbd.wtyh.domain.BuildingDO">
        UPDATE building SET img_url=#{imgUrl}, update_date=SYSDATE(),update_by=#{updateBy} WHERE park_id=#{parkId} AND building_id=#{buildingId}
    </update>

    <select id="queryAllPark" resultType="com.bbd.wtyh.domain.ParkDO">
        SELECT `name` as `name`, area_id as areaId FROM area WHERE parent_id=104
    </select>

    <select id="queryBuildingCompany" parameterType="java.lang.String" resultType="com.bbd.wtyh.domain.vo.ParkAndBuildingVO">
        SELECT
            b.`name` as buildingName,
            count(1) as companyCount
        FROM
            park p, building b, company_building cb, company c
        WHERE
            p.park_id=b.park_id and b.building_id=cb.building_id and cb.company_id=c.company_id and p.`name`=#{parkName}
        GROUP BY b.`name`
    </select>

    <select id="queryBuildingFinCompany" parameterType="java.lang.String" resultType="com.bbd.wtyh.domain.vo.ParkAndBuildingVO">
        SELECT
            b.`name` as buildingName,
            count(1) as finCompanyCount
        FROM
            park p, building b, company_building cb, company c
        WHERE
            p.park_id=b.park_id and b.building_id=cb.building_id and cb.company_id=c.company_id and p.`name`=#{parkName} and c.company_type<![CDATA[>=]]>1
        GROUP BY b.`name`
    </select>

    <select id="queryBuildingCompanyNumber" parameterType="java.lang.String" resultType="com.bbd.wtyh.domain.vo.ParkAndBuildingVO">
        SELECT
            o.name as buildingName,
            o.building_id as buildingId,
            o.park_id as parkId,
            (
            SELECT
                count(1)
            FROM
                park p,
                building b,
                company_building cb,
                company c
            WHERE
                p.park_id=b.park_id and b.building_id=cb.building_id and cb.company_id=c.company_id and b.`name` = o.name
            )
            as companyCount,
            (
            SELECT
                count(1)
            FROM
                park p,
                building b,
                company_building cb,
                company c
            WHERE
                p.park_id=b.park_id and b.building_id=cb.building_id and cb.company_id=c.company_id and b.`name` = o.name and c.company_type<![CDATA[>=]]>1
            )
            as finCompanyCount
        FROM
            building o
        WHERE
            o.park_id = #{parkId}
    </select>

    <insert id="addBuilding" parameterType="com.bbd.wtyh.domain.BuildingDO">
        INSERT INTO building(`name`, park_id, img_url, create_by, create_date) VALUES(#{name}, #{parkId}, #{imgUrl}, #{createBy}, SYSDATE())
    </insert>

    <delete id="delCompanyByCompanyId" >
        DELETE from
            company_building
        where
            building_id = #{buildingId}
        AND
            company_id in
              <foreach item="item" index="index" collection="companyIdList" open="(" separator="," close=")">
                #{item}
              </foreach>
    </delete>

    <delete id="delCompanyByBuildingId" parameterType="java.util.List">
        DELETE FROM company_building WHERE building_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="delBuildingByParkId" parameterType="java.lang.String">
        DELETE FROM building WHERE park_id=#{parkId}
    </delete>

    <delete id="delParkByName" parameterType="java.lang.String">
        DELETE FROM park WHERE `name`=#{parkName}
    </delete>

    <delete id="delBuildingById" parameterType="java.util.List">
        DELETE FROM building WHERE building_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="delParkById" parameterType="java.lang.String">
        DELETE FROM park WHERE park_id=#{parkId}
    </delete>

    <delete id="delCompanyBuildingByParkId" parameterType="java.lang.String">
        DELETE FROM
          company_building
        WHERE
          building_id
        IN
          (select  building_id from building where park_id = #{parkId})
    </delete>

    <sql id="building_content">
        building_id as buildingId, `name` as `name`, park_id as parkId, img_url as imgUrl
    </sql>

    <select id="queryBuildingByParkId" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT <include refid="building_content" /> FROM building
        <where>
            <if test="_parameter != null and _parameter != ''">
                park_id=#{parkId}
            </if>
        </where>
    </select>

    <select id="queryCompanyBuildingId"  resultType="java.lang.Integer">
        SELECT company_id as companyId FROM company_building WHERE building_id=#{buildingId} AND company_id=#{companyId}
    </select>

    <select id="queryParkIdByName" parameterType="java.lang.String" resultType="int">
        SELECT park_id as parkId FROM park WHERE `name`=#{parkName}
    </select>

    <select id="queryBuildingIdByName" resultType="int">
        SELECT building_id as buildingId FROM building WHERE park_id=#{parkId} AND `name`=#{buildingName}
    </select>

    <select id="queryParkList" resultType="com.bbd.wtyh.domain.ParkDO">
        SELECT park_id as parkId,name as name FROM park WHERE 1=1 ORDER BY park_id
    </select>

    <insert id="addPark" parameterType="com.bbd.wtyh.domain.ParkDO">
        INSERT INTO park(`name`, area_id, img_url, create_by, create_date) VALUES(#{name},#{areaId},#{imgUrl},#{createBy},SYSDATE())
    </insert>

    <select id="queryCompanyIdByName" parameterType="java.lang.String" resultType="int">
        SELECT company_id as companyId FROM company WHERE `name`=#{companyName}
    </select>

    <insert id="addCompanyBuilding" parameterType="com.bbd.wtyh.domain.CompanyBuildingDO">
        INSERT INTO company_building(company_id, building_id, create_by, create_date) VALUES (#{companyId},#{buildingId},#{createBy},SYSDATE())
    </insert>

    <insert id="addCompanyBuildingList" parameterType="java.util.List">
        INSERT INTO company_building(company_id, building_id, create_by, create_date) VALUES
        <foreach collection="list" separator="," item="item">
            (#{item.companyId},#{item.buildingId},#{item.createBy},SYSDATE())
        </foreach>
    </insert>

    <insert id="addExcelComAndBuilding" parameterType="java.util.List">
        INSERT INTO park_company_import(import_no, company_name, building_name, company_id, building_id, error_company, error_building, create_by, create_date, update_date) VALUES
        <foreach collection="list" separator="," item="item">
            (#{item.importNo},#{item.companyName},#{item.buildingName},#{item.companyId},#{item.buildingId},#{item.errorCompany},#{item.errorBuilding},#{item.createBy},SYSDATE(),SYSDATE())
        </foreach>
    </insert>

    <select id="queryImportNo" resultType="java.lang.String">
        SELECT UUID() FROM DUAL
    </select>

    <select id="queryImportContentByNo" parameterType="java.lang.String" resultType="com.bbd.wtyh.domain.ParkCompanyImportDO">
        SELECT
            company_name as companyName,
            building_name as buildingName,
            company_id as companyId,
            building_id as buildingId,
            error_company as errorCompany,
            error_building as errorBuilding
        FROM
            park_company_import
        WHERE import_no=#{importNo}
    </select>

    <select id="queryBuildingByParkAndBuilding" resultType="com.bbd.wtyh.domain.BuildingDO">
        SELECT <include refid="building_content" /> FROM building WHERE park_id=#{parkId} AND building_id=#{buildingId}
    </select>

    <select id="queryBuildingList" parameterType="java.lang.String" resultType="java.util.Map">
        select
            building_id as buildingId,
            name as buildingName
        from
            building
        <where>
            <if test="parkId != null and parkId != ''">
                park_id = #{parkId}
            </if>
            <if test="buildingName != null and buildingName != ''">
                and name like #{buildingName}
            </if>
        </where>

    </select>

    <select id="queryCompanyByBuildingId" resultType="com.bbd.wtyh.domain.CompanyDO" parameterType="int">
        SELECT
            company_id as companyId,
            `name` as `name`,
            legal_person as legalPerson,
            registered_type as registeredType,
            business_type as businessType,
            risk_level as riskLevel
        FROM
            company
        WHERE
            company_id IN (SELECT company_id FROM company_building WHERE building_id=#{buildingId})
    </select>

</mapper>