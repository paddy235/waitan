<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.wtyh.mapper.StaticRiskMapper">
    <sql id="staticRiskContent">
		company_name as companyName,
		data_version as dataVersion,
		risk_date as riskDate,
		static_risk_index as stcRiskIndex,
		max_person_company_num3 as maxPerComNum,
		max_legal_company_num3 as maxLegComNum,
		average_person_company_num3 as avePerComNum,
		average_legal_company_num3 as aveLegComNum,
		max_company_num as maxComNum,
		average_person_num as avgPerNum,
		one_level_person as oneLvlPer,
		real_control_risk as realConRisk,
		child_compnay_control_person_num as cldComConPerNum,
		child_child_control_num as cldCtlNum,
		core_child_company as coreCldCom,
		company_expand_risk as comExpRisk,
		control_child_company_num as ctlCldComNum,
		one_company_num as oneComNum,
		control_company as conCom,
		relation_in_risk as relInRisk,
		three_person_num as thrPerNum,
		two_company_num as twoComNum,
		core_two_company as coreTwoCom,
		illegal_financing_risk as illFinRisk,
		six_month_new_company_num as sixMonNewComNum,
		to_year_new_comapny_num as toYearNewComNum,
		six_month_new_company as sixMonNewCom,
		relation_company_sum as relCompanySum,
		short_risk as shortRisk,
		investment as investment,
		advisory as advisory,
		trade as trade,
		lease as lease,
		factoring as factoring,
		company_list as companyList,
		illegal_money_financing_risk as illMoneyFinRisk,
		undergraduate_num as underNum,
		uper_undergraduate_num as upperUnderNum,
		follow_undergraduate_num as flwUnderNum,
		recruitment_sum as rectSum,
		top5_recruitment_sum as top5RecSum,
		person_structure_risk as perStructRisk,
		area as areaCode
	</sql>

    <select id="queryLastStaticRisk" resultType="com.bbd.wtyh.domain.dto.StaticRiskDTO"
            parameterType="java.util.HashMap">
        select
          <include refid="staticRiskContent"></include>
        from static_risk_data
        where company_name=#{companyName}
        <if test="areaCode != null and areaCode != ''">
            and area=#{areaCode}
        </if>
        and risk_date like concat(#{riskDateStr}, '%')
        ORDER BY risk_date DESC
        LIMIT 1;
    </select>

    <select id="queryIndStatistics" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        '静态风险指数' as riskName,
        avg(static_risk_index) as avgRiskIndex,
        <include refid="ind_statistics"></include>
    </select>

    <sql id="ind_statistics">
		DATE_FORMAT(risk_date,'%Y-%m') as date
		from
		static_risk_data
		where
		  1=1
        <if test="areaCode != null and areaCode != ''">
            and area=#{areaCode}
        </if>

		group by date;
	</sql>
    <select id="queryComStsRCJG" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        person_structure_risk as riskIndex
        <include refid="com_statistics"></include>
    </select>
    <select id="queryIndStsRCJG" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        '人才结构风险' as riskName,
        avg(person_structure_risk) as avgRiskIndex,
        <include refid="ind_statistics"></include>
    </select>
    <select id="queryComStsFFRZWG" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        illegal_money_financing_risk as riskIndex
        <include refid="com_statistics"></include>
    </select>
    <select id="queryIndStsFFRZWG" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        '非法融资违规风险' as riskName,
        avg(illegal_money_financing_risk) as avgRiskIndex,
        <include refid="ind_statistics"></include>
    </select>
    <select id="queryComStsDQZL" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        short_risk as riskIndex
        <include refid="com_statistics"></include>
    </select>
    <select id="queryIndStsDQZL" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        '短期逐利风险' as riskName,
        avg(short_risk) as avgRiskIndex,
        <include refid="ind_statistics"></include>
    </select>
    <select id="queryComStsFFRZYS" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        illegal_financing_risk as riskIndex
        <include refid="com_statistics"></include>
    </select>
    <select id="queryIndStsFFRZYS" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        '非法融资衍生风险' as riskName,
        avg(illegal_financing_risk) as avgRiskIndex,
        <include refid="ind_statistics"></include>
    </select>
    <select id="queryComStsZXJJH" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        relation_in_risk as riskIndex
        <include refid="com_statistics"></include>
    </select>
    <select id="queryIndStsZXJJH" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        '中心积聚化风险' as riskName,
        avg(relation_in_risk) as avgRiskIndex,
        <include refid="ind_statistics"></include>
    </select>
    <select id="queryComStsGSKZLJ" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        company_expand_risk as riskIndex
        <include refid="com_statistics"></include>
    </select>
    <select id="queryIndStsGSKZLJ" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        '公司扩张路径风险' as riskName,
        avg(company_expand_risk) as avgRiskIndex,
        <include refid="ind_statistics"></include>
    </select>
    <select id="queryComStsSJKZR" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        real_control_risk as riskIndex
        <include refid="com_statistics"></include>
    </select>
    <select id="queryIndStsSJKZR" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        '实际控制人风险' as riskName,
        avg(real_control_risk) as avgRiskIndex,
        <include refid="ind_statistics"></include>
    </select>
    <select id="queryComStatistics" resultType="com.bbd.wtyh.domain.vo.StatisticsVO" parameterType="java.util.HashMap">
        select
        static_risk_index as riskIndex
        <include refid="com_statistics"></include>
    </select>
    <sql id="com_statistics">
		from
		static_risk_data
		where
		company_name=#{companyName}
        <if test="areaCode != null and areaCode != ''">
            and area=#{areaCode}
        </if>
	    and
		risk_date like concat(#{date}, '%')
        ORDER BY risk_date DESC
        LIMIT 1;
	</sql>

    <!--始终获取 最新版本的 数据, 不知道使用子查询WHERE替换JION会不会有效率提升-->
    <select id="getSpectrumAnalysis" resultType="com.bbd.wtyh.domain.vo.StaticRiskSpectrumVO">
        SELECT
            t1.company_name AS NAME,
            t1.risk_date AS riskDate,
            t1.static_risk_index AS stcRiskIndex,
            t1.registered_capital
        FROM (
                SELECT
                    company_name,
                    risk_date,
                    static_risk_index,
                    registered_capital
                FROM
                  static_risk_data
                LEFT JOIN company ON static_risk_data.company_name = company.`name`
                WHERE
                    1 = 1
                    and company_name not in('上海申彤大大资产管理有限公司','中晋资产管理（上海）有限公司')
                    <if test="low != null">
                        and #{low} &lt;= static_risk_index
                    </if>
                    <if test="upper != null">
                        and static_risk_index &lt; #{upper}
                    </if>
            ) t1
        RIGHT JOIN (
            SELECT
              risk_date
            FROM
              static_risk_data
            ORDER BY
              risk_date DESC
            LIMIT 0, 1
        ) t2
        ON t1.risk_date = t2.risk_date
        <if test="normal_flag == true">
            ORDER BY static_risk_index ASC
        </if>
        <if test="normal_flag == false">
            ORDER BY static_risk_index DESC
        </if>
        LIMIT 0, 400
    </select>

    <select id="queryDateVersion" resultType="java.lang.String" parameterType="java.util.HashMap">
        select
          data_version as date
        from
        static_risk_data
        where
            company_name=#{companyName}
        <if test="areaCode != null and areaCode != ''">
            and area=#{areaCode}
        </if>
        group by date
        order by date DESC;
    </select>

    <select id="getNewestDataVersion" resultType="java.lang.String">
        SELECT DISTINCT
          data_version
        FROM
          static_risk_data
        ORDER BY
          data_version DESC
        LIMIT 1;
    </select>

    <select id="queryDateVersionByMonth" resultType="java.lang.String" parameterType="java.util.HashMap">
        SELECT
          data_version AS date
        FROM
          relation_data
        WHERE
          company_name = #{companyName}
        AND data_version LIKE CONCAT('%',#{dataVersionString},'%' )
        ORDER BY data_version DESC
        LIMIT 1
    </select>

    <select id="queryStaticsRiskIndex" parameterType="java.lang.String" resultType="Float">
        SELECT
        static_risk_index
        FROM
        static_risk_data
        WHERE
        company_name = #{companyName}
        ORDER BY
        data_version DESC
        LIMIT 1;
    </select>

    <select id="getDataVersionCount" parameterType="java.util.HashMap" resultType="int">
        SELECT COUNT(1) from static_risk_data
        <where>
            1=1
            <if test="dataVersion != null and dataVersion != ''">
                AND data_version = #{dataVersion}
            </if>
        </where>
    </select>
    <select id="findByPage" parameterType="java.util.HashMap" resultType="com.bbd.wtyh.domain.StaticRiskDataDO">
        select
        <include refid="staticRiskDataDOContent"></include>
        from static_risk_data
        where 1=1
        <if test="dataVersion != null and dataVersion != ''">
            AND data_version = #{dataVersion}
        </if>
        limit #{pagination.begin}, #{pagination.pageSize}
    </select>
    <update id="update" parameterType="com.bbd.wtyh.domain.StaticRiskDataDO" >
        UPDATE `static_risk_data` set
        static_risk_index = #{staticRiskIndex}
        where company_name = #{companyName,jdbcType=VARCHAR}
        and area = #{area,jdbcType=VARCHAR}
        AND data_version = #{dataVersion}
    </update>
    <select id="queryCapitalBgRisk" parameterType="java.lang.String" resultType="Float">
        SELECT
        capital_bg_risk
        FROM
        static_risk_data
        WHERE
        company_name = #{companyName}
        ORDER BY
        data_version DESC
        LIMIT 1;
    </select>

    <select id="queryStaticsRiskData" parameterType="java.lang.String" resultType="com.bbd.wtyh.domain.StaticRiskDataDO">
        SELECT <include refid="staticRiskDataDOContent"></include> from static_risk_data
        where company_name=#{companyName} ORDER BY data_version desc LIMIT 1;
    </select>

    <select id="maxDataVersion" resultType="java.lang.String">
        SELECT
			MAX(data_version)
		FROM
			static_risk_data
    </select>

    <insert id="save" parameterType="com.bbd.wtyh.domain.StaticRiskDataDO" >
        INSERT INTO `static_risk_data` VALUES (#{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{area}, #{companyName}, #{dataVersion}, #{riskDate}, #{staticRiskIndex}, #{maxCompanyNum}, #{averagePersonNum}, #{oneLevelPerson}, #{realControlRisk}, #{childCompnayControlPerson_num}, #{childChildControlNum}, #{coreChildCompany}, #{companyExpandRisk}, #{controlChildCompanyNum},
         #{oneCompanyNum}, #{controlCompany}, #{relationInRisk}, #{threePersonNum}, #{twoCompanyNum}, #{coreTwoCompany}, #{illegalFinancingRisk}, #{sixMonthNewCompanyNum}, #{toYearNewComapnyNum}, #{sixMonthNewCompany}, #{relationCompanySum}, #{shortRisk},
         #{investment}, #{advisory}, #{trade}, #{lease}, #{factoring}, #{companyList},
         #{illegalMoneyFinancingRisk}, #{capitalBgRisk}, #{undergraduateNum}, #{uperUndergraduateNum}, #{followUndergraduateNum},
         #{recruitmentSum}, #{top5RecruitmentSum}, #{personStructureRisk}, #{creditInfoRisk}, #{isExposure});
    </insert>

    <sql id="staticRiskDataDOContent">
         area AS area,
         company_name AS companyName,
         data_version AS dataVersion,
         risk_date AS riskDate,
         static_risk_index AS staticRiskIndex,
         max_company_num AS maxCompanyNum,
         average_person_num AS averagePersonNum,
         one_level_person AS oneLevelPerson,
         real_control_risk AS realControlRisk,
         child_compnay_control_person_num AS childCompnayControlPerson_num,
         child_child_control_num AS childChildControlNum,
         core_child_company AS coreChildCompany,
         company_expand_risk AS companyExpandRisk,
         control_child_company_num AS controlChildCompanyNum,
         one_company_num AS oneCompanyNum,
         control_company AS controlCompany,
         relation_in_risk AS relationInRisk,
         three_person_num AS threePersonNum,
         two_company_num AS twoCompanyNum,
         core_two_company AS coreTwoCompany,
         illegal_financing_risk AS illegalFinancingRisk,
         six_month_new_company_num AS sixMonthNewCompanyNum,
         to_year_new_comapny_num AS toYearNewComapnyNum,
         six_month_new_company AS sixMonthNewCompany,
         relation_company_sum AS relationCompanySum,
         short_risk AS shortRisk,
         investment AS investment,
         advisory AS advisory,
         trade AS trade,
         lease AS lease,
         factoring AS factoring,
         company_list AS companyList,
         illegal_money_financing_risk AS illegalMoneyFinancingRisk,
         capital_bg_risk AS capitalBgRisk,
         undergraduate_num AS undergraduateNum,
         uper_undergraduate_num AS uperUndergraduateNum,
         follow_undergraduate_num AS followUndergraduateNum,
         recruitment_sum AS recruitmentSum,
         top5_recruitment_sum AS top5RecruitmentSum,
         person_structure_risk AS personStructureRisk,
         is_exposure AS isExposure,
         credit_info_risk AS creditInfoRisk
    </sql>
</mapper>