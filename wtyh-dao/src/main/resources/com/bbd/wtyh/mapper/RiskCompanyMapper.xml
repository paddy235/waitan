<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.wtyh.mapper.RiskCompanyMapper">

    <sql id="indexDataCondition">
        <where>
            i.company_name=c.`name` and c.company_type=4
            <if test="area != null and area != ''">
                AND i.area=#{area}
            </if>
            <if test="minRegCapital != null and minRegCapital != ''">
                AND i.reg_capital<![CDATA[>=]]>#{minRegCapital}
            </if>
            <if test="maxRegCapital != null and maxRegCapital != ''">
                AND i.reg_capital<![CDATA[<=]]>#{maxRegCapital}
            </if>
            <if test="companyQualification != null and companyQualification != ''">
                AND i.company_qualification LIKE #{companyQualification}
            </if>
            <if test="minReviewTime != null and minReviewTime != ''">
                AND i.review_time<![CDATA[>=]]>#{minReviewTime}
            </if>
            <if test="maxReviewTime != null and maxReviewTime != ''">
                AND i.review_time<![CDATA[<=]]>#{maxReviewTime}
            </if>
            <if test="riskLevel != null and riskLevel != ''">
                AND c.risk_level=#{riskLevel}
            </if>
            <if test="riskLevelExist != null and riskLevelExist == '1'">
                AND c.risk_level != null
            </if>
        </where>
    </sql>
    <sql id="indexDataContent">
		i.create_by as createBy,
		i.create_date as createDate,
		i.update_by as updateBy,
		i.update_date as updateDate,
		i.area as area,
		i.reg_capital as regCapital,
		i.company_qualification as companyQualification,
		i.company_name as companyName,
		i.static_risk_index as staticRiskIndex,
		i.dynamic_risk_index as dynamicRiskIndex,
		i.legal_rpt as legalRpt,
		i.company_type as companyType,
		i.review_time as reviewTime,
		i.is_rise as isRise,
		i.reg_date as regDate,
		DATE_FORMAT(i.reg_date,'%Y-%m-%d') as regDateStr,
		c.risk_level as riskLevel,
		c.address
	</sql>

    <select id="getScanner" resultType="com.bbd.wtyh.domain.RiskCompanyInfoDO" parameterType="java.util.HashMap">
        select
        <include refid="indexDataContent"></include>
        from index_data i, company c
        <include refid="indexDataCondition"></include>
        order by i.static_risk_index asc
    </select>

    <select id="getScannerCount" parameterType="java.util.HashMap" resultType="int">
        select count(1) from index_data i, company c
        <include refid="indexDataCondition"></include>
    </select>

    <select id="getTop" parameterType="java.util.HashMap" resultType="com.bbd.wtyh.domain.RiskCompanyInfoDO">
        <!-- 		select
                    <include refid="indexDataContent"></include>
                from index_data i, company c
                <include refid="indexDataCondition"></include>
                order by i.static_risk_index
                <choose>
                    <when test="sortType == '0'.toString()">
                        asc
                    </when>
                    <otherwise>
                        desc
                    </otherwise>
                </choose>
                limit #{pagination.begin}, #{pagination.pageSize} -->
        select * from (
        select * from (select
        <include refid="indexDataContent"></include>
        from index_data i, company c
        <include refid="indexDataCondition"></include>
        order by i.static_risk_index
        <choose>
            <when test="sortType == '0'.toString()">
                asc
            </when>
            <otherwise>
                desc
            </otherwise>
        </choose>
        limit 0, 100) i
        UNION ALL
        select * from (select
        <include refid="indexDataContent"></include>
        from index_data i, company c
        <include refid="indexDataCondition"></include>
        order by i.static_risk_index
        <choose>
            <when test="sortType == '0'.toString()">
                desc
            </when>
            <otherwise>
                asc
            </otherwise>
        </choose>
        limit 0, 100) i
        ) tmp group by tmp.companyName order by tmp.staticRiskIndex
        <choose>
            <when test="sortType == '0'.toString()">
                asc
            </when>
            <otherwise>
                desc
            </otherwise>
        </choose>
    </select>

    <select id="getTopCount" parameterType="java.util.HashMap" resultType="int">
        select count(1) from index_data i, company c
        <include refid="indexDataCondition"></include>
    </select>

    <select id="getLastDataVersion" resultType="string">
		select data_version as dataVersion from static_risk_data group by data_version order by data_version desc limit 1
	</select>

    <select id="getOffLineFinanceByName" resultType="com.bbd.wtyh.domain.CompanyInfoModify.CompanyInfo">
		SELECT
		    company.company_id AS companyId,
		    company.`name` AS `name`,
		    company.legal_person AS legalPerson,
		    company.registered_capital AS registeredCapital,
		    company.registered_capital_type AS registeredCapitalType,
		    company.risk_level AS currentLevel
		FROM
		  company
		WHERE
		  company.`name` = #{name}
	</select>

    <select id="countOffLineFinance" resultType="long">
        SELECT
        COUNT(1)
        FROM
        company
        LEFT JOIN
        ( SELECT company_id,GROUP_CONCAT(background)background FROM company_background GROUP BY company_id ) AS
        company_background
        ON company.company_id=company_background.company_id
        LEFT JOIN index_data
        ON company.name= index_data.company_name
        WHERE
        1=1
        <if test="exportCondition.industry!=null">
            and company.company_type = #{exportCondition.industry}
        </if>
        <if test="exportCondition.currentLevel!=null">
            and company.risk_level = #{exportCondition.currentLevel}
        </if>
        <if test="exportCondition.registeredCapitalMin!=null">
            and company.registered_capital >= #{exportCondition.registeredCapitalMin}
        </if>
        <if test="exportCondition.registeredCapitalMax!=null">
            and #{exportCondition.registeredCapitalMax} >= company.registered_capital
        </if>
        <if test="exportCondition.registeredDateMin!=null">
            and company.registered_date >= #{exportCondition.registeredDateMin}
        </if>
        <if test="exportCondition.registeredDateMax!=null">
            and #{exportCondition.registeredDateMax} >= company.registered_date
        </if>
        <if test="exportCondition.areaId!=null">
            and company.area_id = #{exportCondition.areaId}
        </if>
    </select>

    <select id="getOffLineFinance" parameterType="com.bbd.wtyh.web.EasyExportExcel.ExportCondition"
            resultType="com.bbd.wtyh.domain.EasyExport.OffLineData">
        SELECT
        company.`name` AS `name`,
        company.company_type AS industry,
        company_background.background AS background,
        company.risk_level AS currentLevel,
        company.legal_person AS legalPerson,
        company.registered_date AS registeredDate,
        company.registered_capital AS registeredCapital,
        company.registered_capital_type AS registeredCapitalType,
        company.address AS address,
        index_data.static_risk_index AS staticRiskIndex
        FROM
        company
        LEFT JOIN
        ( SELECT company_id,GROUP_CONCAT(background)background FROM company_background GROUP BY company_id ) AS
        company_background
        ON company.company_id=company_background.company_id
        LEFT JOIN index_data
        ON company.name= index_data.company_name
        WHERE
        1=1
        <if test="exportCondition.industry!=null">
            and company.company_type = #{exportCondition.industry}
        </if>
        <if test="exportCondition.currentLevel!=null">
            and company.risk_level = #{exportCondition.currentLevel}
        </if>
        <if test="exportCondition.registeredCapitalMin!=null">
            and company.registered_capital >= #{exportCondition.registeredCapitalMin}
        </if>
        <if test="exportCondition.registeredCapitalMax!=null">
            and #{exportCondition.registeredCapitalMax} >= company.registered_capital
        </if>
        <if test="exportCondition.registeredDateMin!=null">
            and company.registered_date >= #{exportCondition.registeredDateMin}
        </if>
        <if test="exportCondition.registeredDateMax!=null">
            and #{exportCondition.registeredDateMax} >= company.registered_date
        </if>
        <if test="exportCondition.areaId!=null">
            and company.area_id = #{exportCondition.areaId}
        </if>
        LIMIT #{pagination.offset}, #{pagination.pageSize}
    </select>

    <update id="modifyLevel">
        update company
        <set>
            previous_risk_level=risk_level,
            risk_level=#{afterLevel}
        </set>
        where `name`=#{name}
    </update>

    <insert id="recordOffLine" parameterType="com.bbd.wtyh.domain.CompanyInfoModify.OffLineModify">
        INSERT INTO
        `company_modify` (`name`, `beforeLevel`, `afterLevel`, `beforeIndustry`)
        VALUES
        (#{name}, #{beforeLevel},#{afterLevel}, #{beforeIndustry})
    </insert>

    <update id="modifyIndustry">
        update company
        <set>
            company_type=#{industry}
        </set>
        where `name`=#{name}
    </update>

    <select id="area" resultType="map">
       SELECT
            `name` AS city,
             area_id AS areaId
       FROM
            area
       WHERE
            `city_id` = '104'
    </select>

</mapper>