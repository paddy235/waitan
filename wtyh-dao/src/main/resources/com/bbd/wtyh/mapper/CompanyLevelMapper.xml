<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.wtyh.mapper.CompanyLevelMapper">
    <resultMap id="BaseResultMap" type="com.bbd.wtyh.domain.CompanyLevelDO">
        <id column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="out_level" jdbcType="INTEGER" property="outLevel"/>
        <result column="inner_level" jdbcType="INTEGER" property="innerLevel"/>
        <result column="live_level" jdbcType="INTEGER" property="liveLevel"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_date" jdbcType="DATE" property="createDate"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_date" jdbcType="DATE" property="updateDate"/>
    </resultMap>
    <sql id="Base_Column_List">
    company_id, out_level, inner_level, live_level, create_by, create_date, update_by, 
    update_date
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from company_level
        where company_id = #{companyId,jdbcType=INTEGER}
    </select>

    <select id="selectCompanyLevel" resultMap="BaseResultMap">
        select
        company_level.company_id, company_level.out_level, company_level.inner_level, company_level.live_level
        from company_level,company
        where company_level.company_id = company.company_id
        and company.company_type=#{companyType}
        <if test="areaId != null">
            and company.area_id=#{areaId}
        </if>
        <if test="orderByField != null">
            order by
            <choose>
                <when test="orderByField == 1">
                    out_level is null,out_level
                </when>
                <when test="orderByField == 2">
                    inner_level is null,inner_level
                </when>
                <otherwise>
                    live_level is null,live_level
                </otherwise>
            </choose>
            <choose>
                <when test="descAsc == 'asc'">
                    asc
                </when>
                <otherwise>desc</otherwise>
            </choose>

        </if>
        <if test="orderByField==null">
            order by live_level is null,live_level, inner_level is null,inner_level,out_level is null,out_level
        </if>
    </select>

    <select id="getLoanOrGuaranteeByCompanyName" resultType="com.bbd.wtyh.domain.CompanyInfoModify.CompanyInfo">
       SELECT
            company_level.company_id,
            company.`name` AS `name`,
            company.legal_person AS legalPerson,
            company.registered_capital AS registeredCapital,
            company.company_type AS industry,
            company_level.out_level AS outLevel,
            company_level.inner_level AS innnerLevel,
            company_level.live_level AS liveLevel
       FROM
            company_level,
            company
       WHERE
            company_level.company_id = company.company_id
            AND company.`name` = #{name}
    </select>

    <select id="getLoan" parameterType="com.bbd.wtyh.web.EasyExportExcel.ExportCondition" resultType="com.bbd.wtyh.domain.EasyExport.LoanData">
        SELECT
            company.`name` AS `name`,
            company.company_type AS industry,
            company_level.out_level AS outLevel,
            company_level.inner_level AS innnerLevel,
            company_level.live_level AS liveLevel,
            company.legal_person AS legalPerson,
            company.registered_date AS registeredDate,
            company.registered_capital AS registeredCapital,
            company.registered_capital_type AS registeredCapitalType,
            company.address AS address
        FROM
            company_level,
            company
        WHERE
            company_level.company_id = company.company_id
            <if test="exportCondition.industry!=null">
                and company.company_type = #{exportCondition.industry}
            </if>
            <if test="exportCondition.currentLevel!=null">
                and company.risk_level = #{exportCondition.currentLevel}
            </if>
            <if test="exportCondition.registeredCapitalMin!=null">
                and company.registered_capital >= #{exportCondition.registeredCapitalMin}
            </if>
            <if test="exportCondition.registeredCapitalMax!=null">
                and #{exportCondition.registeredCapitalMin} >= company.registered_capital
            </if>
            <if test="exportCondition.registeredDateMin!=null">
                and company.registered_date >= #{exportCondition.registeredCapitalMin}
            </if>
            <if test="exportCondition.registeredDateMax!=null">
                and #{exportCondition.registeredDateMax} >= company.registered_date
            </if>
            <if test="exportCondition.areaId!=null">
                and company.areaId = #{exportCondition.areaId}
            </if>
        LIMIT #{pagination.offset}, #{pagination.pageSize}
    </select>

    <insert id="recordLoad" parameterType="com.bbd.wtyh.domain.CompanyInfoModify.LoanModify">
        INSERT INTO
        `company_modify` (`name`,
                        `beforeOutLevel`, `beforeInnnerLevel`, `beforeLiveLevel`,
                        `afterOutLevel`, `afterInnnerLevel`, `afterLiveLevel`,
                        `beforeIndustry`)
        VALUES
        (#{name},
        #{beforeOutLevel}, #{beforeInnnerLevel}, #{beforeLiveLevel},
        #{afterOutLevel}, #{afterInnnerLevel},  #{afterLiveLevel},
          #{beforeIndustry})
    </insert>

    <update id="modifyLoad" >
        update company_level,company
        <set>
            company_level.out_level = #{afterOutLevel},
            company_level.inner_level = #{afterInnnerLevel},
            company_level.live_level = #{afterLiveLevel}
        </set>
        WHERE
          company_level.company_id = company.company_id
          AND company.`name` = #{name}
    </update>
</mapper>