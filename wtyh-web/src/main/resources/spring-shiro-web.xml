<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.bbd.wtyh.auth.UserRealm">
        <!-- <property name="credentialsMatcher" ref="hashedCredentialsMatcher"/>--><!--todo 密码加密-->
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="webAuthenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="webAuthorizationCache"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="1800000"/>
        <property name="name" value="WEBSID"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="redisSessionDAO" class="com.bbd.wtyh.shiro.RedisSessionDAO">
        <!--<property name="activeSessionsCacheName" value="web-shiro-activeSessionCache"/>-->
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
        <property name="loginNameKey" value="web:login:name:sessionid"/>
        <property name="sessionKey" value="web:shiro:session:cache:"/>
    </bean>

    <!-- 会话验证调度器 验证会话是否已过期 -->
    <bean id="sessionValidationScheduler" class="com.bbd.wtyh.service.shiro.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>


    <!-- 超时监听器 -->
    <bean id="shiroSessionListener" class="com.bbd.wtyh.auth.TimeOutSessionListener"/>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <!--<property name="globalSessionTimeout" value="120000"/>-->
        <property name="sessionListeners">
            <list>
                <ref bean="shiroSessionListener"/>
            </list>
        </property>
        <property name="sessionDAO" ref="redisSessionDAO"/>

        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>

    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login"/>
    </bean>


    <bean id="justOnePermFilter" class="com.bbd.wtyh.auth.JustOnePermissionAuthorizationFilter"/>
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/index"/>
        <property name="unauthorizedUrl" value="/jsp/common/error"/>
        <property name="filters">
            <util:map>
                <entry key="perms" value-ref="justOnePermFilter"/>
            </util:map>
        </property>


        <!--anon不需要登录 perms鉴权-->
        <property name="filterChainDefinitions">
            <value>
                <!--登出、静态资源不鉴权-->
                /css/** = anon
                /js/** = anon
                /data/** = anon
                /iconfont/** = anon
                /images/** = anon
                /libs/** = anon
                /relativeGraph/** = anon
                /logout.do = anon
                <!--共用交易-->
                /risk/getScanner.do = perms[F_HYJCPT_XXLC,F_SSJCPT]<!--线下理财、时监测平台-->
                <!--/offlineFinance/queryDynamicPicData.do = perms[F_QYQXXXCXPT,F_SSJCPT]&lt;!&ndash;全息、时监测平台&ndash;&gt;-->
                <!--网络借贷-->
                /PToPMonitor/areaIndex.do = perms[F_HYJCPT_WLJD]
                /PToPMonitor/platRankData.do = perms[F_HYJCPT_WLJD]
                /PToPMonitor/integrated.do = perms[F_HYJCPT_WLJD]
                <!--线下理财-->
                /risk/getTop.do = perms[F_HYJCPT_XXLC]
                <!--小额贷款-->
                /loan/companyLevel.do = perms[F_HYJCPT_XEDK]
                /loan/areaStatistic.do = perms[F_HYJCPT_XEDK]
                /loan/balanceByQuarter.do = perms[F_HYJCPT_XEDK]
                /loan/shareholderRisk.do = perms[F_HYJCPT_XEDK]
                /loan/largeLoanList.do = perms[F_HYJCPT_XEDK]
                /loan/balanceByQuarter.do = perms[F_HYJCPT_XEDK]
                <!--融资担保-->
                /guarantee/companyLevel.do = perms[F_HYJCPT_RZDB]
                /guarantee/areaStatistic.do = perms[F_HYJCPT_RZDB]
                /guarantee/balanceByQuarter.do = perms[F_HYJCPT_RZDB]
                /guarantee/shareholderRisk.do = perms[F_HYJCPT_RZDB]
                /guarantee/largeGuaranteeList.do = perms[F_HYJCPT_RZDB]
                /guarantee/balanceByQuarter.do = perms[F_HYJCPT_RZDB]
                <!--私募基金-->
                /privateFund/qflpInfoList.do = perms[F_HYJCPT_SMJJ]
                /privateFund/typeStatistic.do = perms[F_HYJCPT_SMJJ]
                /privateFund/productTypeStatistic.do = perms[F_HYJCPT_SMJJ]
                /privateFund/topProductNumber.do = perms[F_HYJCPT_SMJJ]
                /privateFund/capitalAmount.do = perms[F_HYJCPT_SMJJ]
                /privateFund/investmentReturn.do = perms[F_HYJCPT_SMJJ]
                /privateFund/investmentAmount.do = perms[F_HYJCPT_SMJJ]
                /privateFund/privateFundList.do = perms[F_HYJCPT_SMJJ]
                /privateFund/qdlpProgressList.do = perms[F_HYJCPT_SMJJ]
                <!--交易场所-->
                /exchangeCompany/exchangeCompanyArea.do = perms[F_HYJCPT_JYCS]
                /exchangeCompany/exchangeCompanyListByAreaId.do = perms[F_HYJCPT_JYCS]
                /exchangeCompany/exchangeCompanyCategory.do = perms[F_HYJCPT_JYCS]
                /exchangeCompany/exchangeCompanyByStatus.do = perms[F_HYJCPT_JYCS]
                /exchangeCompany/exchangeCompanyListByAreaId.do = perms[F_HYJCPT_JYCS]
                <!--众筹-->
                /crowdFunding/distribute.do = perms[F_HYJCPT_ZC]
                /crowdFunding/newlyPeople.do = perms[F_HYJCPT_ZC]
                /crowdFunding/newlyProject.do = perms[F_HYJCPT_ZC]
                /crowdFunding/newlyAmount.do = perms[F_HYJCPT_ZC]
                /crowdFunding/allCompanys.do = perms[F_HYJCPT_ZC]
                <!--典当-->
                /mortgage/companyList.do = perms[F_HYJCPT_DD]
                /mortgage/statisticList.do = perms[F_HYJCPT_DD]
                <!--融资租赁-->
                /financeLease/leaseCompanyStatistic.do = perms[F_HYJCPT_RZZL]
                /financeLease/leaseCompanyCategory.do = perms[F_HYJCPT_RZZL]
                /financeLease/getYears.do = perms[F_HYJCPT_RZZL]
                /financeLease/getYears.do = perms[F_HYJCPT_RZZL]
                /financeLease/leaseCompanyCategory.do = perms[F_HYJCPT_RZZL]
                /financeLease/leaseCompanyList.do = perms[F_HYJCPT_RZZL]
                /area/getAreaByParentId.do = perms[F_HYJCPT_RZZL]
                <!--商业保理-->
                /factoring/distribute.do = perms[F_HYJCPT_SYBL]
                /factoring/geogDistribute.do = perms[F_HYJCPT_SYBL]
                /factoring/queryCompanys.do = perms[F_HYJCPT_SYBL]
                /factoring/countCapitalBySeason.do = perms[F_HYJCPT_SYBL]
                <!--预付卡-->
                /prepaid/amount.do = perms[F_HYJCPT_YFK]
                /prepaid/listAndPieChart.do = perms[F_HYJCPT_YFK]
                <!--园区检测平台-->
                /park/parkImg.do = perms[F_YQJCPT]
                /park/news.do = perms[F_YQJCPT]
                /park/companyConcentration.do = perms[F_YQJCPT]
                /park/businessDistribute.do = perms[F_YQJCPT]
                /park/inBusiness.do = perms[F_YQJCPT]
                <!--园区检测平台 楼宇信息-->
                /park/buildingRisk.do = perms[F_YQJCPT]
                /park/buildingCompany.do = perms[F_YQJCPT]
                /park/buildingBusinessDistribute.do = perms[F_YQJCPT]
                /park/buildingBackground.do = perms[F_YQJCPT]
                /park/buildingNews.do = perms[F_YQJCPT]

                <!--实时监测平台-->
                /realTimeMonitor/spectrumAnalysis.do = perms[F_SSJCPT]
                /realTimeMonitor/ChinaMap.do = perms[F_SSJCPT]
                /realTimeMonitor/shMap.do = perms[F_SSJCPT]
                /realTimeMonitor/shMapMonitorAndRoll.do = perms[F_SSJCPT]
                /offlineFinance/businessChartShow.do = perms[F_SSJCPT]
                /companyNews/getCompanyNews.do = perms[F_SSJCPT]
                <!--实时监测平台  静态风险指数-->
                <!--/offlineFinance/companyNews.do = perms[F_SSJCPT,F_HYJCPT_XXLC]-->
                <!--/offlineFinance/queryDateVersion.do = perms[F_SSJCPT,F_HYJCPT_XXLC]-->
                <!--/offlineFinance/queryStatisticsMultiple.do = perms[F_SSJCPT,F_HYJCPT_XXLC]-->
                <!--/offlineFinance/companyInfo.do = perms[F_SSJCPT,F_HYJCPT_XXLC]-->
                <!--/offlineFinance/staticRiskIndex.do = perms[F_SSJCPT,F_HYJCPT_XXLC]-->
                <!--/offlineFinance/queryRiskData.do = perms[F_SSJCPT,F_HYJCPT_XXLC]-->
                <!--实时监测平台  风险时序差异对比-->
                <!--/offlineFinance/queryDateVersion.do-->
                /offlineFinance/dynamicRiskData.do = perms[F_SSJCPT,F_HYJCPT_XXLC]
                <!--/offlineFinance/companyInfo.do-->
                /offlineFinance/showYEDData.do = perms[F_SSJCPT,F_HYJCPT_XXLC]

                <!--企业全息信息查询平台  目前只控制查询功能，其他功能不鉴权-->
                /hologram/search.do = perms[F_QYQXXXCXPT]
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- Shiro注解-->
    <bean id="controllerAdvisorAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean id="controllerAuthorizationAttributeSourceAdvisor"
          class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>